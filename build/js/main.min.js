window.GLOB={},function(){var e={isNotEmpty:function(e){return Boolean(e)},isNumber:function(e){return/^\d+$/.test(e)},isEmail:function(e){return/^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(e)}};window.GLOB.validation=e}(),function(){var t={},e=document.querySelector(".form-container"),o=null;onClose=function(e){e.preventDefault(),t.close(),o.removeEventListener("click",onClose)},t.open=function(){e.classList.remove("is-hidden"),(o=document.querySelector(".form__close-button"))&&o.addEventListener("click",onClose)},t.close=function(){e.classList.add("is-hidden")},t.isValid=function(){var e=document.querySelectorAll('[data-valid="required"]'),o=document.querySelector("[data-email]").value,n=document.querySelector("[data-number]").value;return t.isAllCompleted(e)?GLOB.validation.isEmail(o)?!!GLOB.validation.isNumber(n)||(console.log("incorrect number"),!1):(console.log("Incorrect eMail"),!1):(console.log("Please, enter the required information"),!1)},t.isAllCompleted=function(e){for(var o=!0,n=0;n<e.length;n++)if(!GLOB.validation.isNotEmpty(e[n].value)){o=!1;break}return o},window.GLOB.form=t}(),function(){var e=document.querySelector(".arrow-down"),o=document.querySelector(".form");e&&e.addEventListener("click",function(e){e.preventDefault(),GLOB.form.open()}),o&&o.addEventListener("submit",function(e){e.preventDefault(),GLOB.form.isValid()?console.log("All good"):console.log("Is not valid")})}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluaXQuanMiLCJ2YWxpZGF0aW9uLmpzIiwiZm9ybS5qcyIsIm1haW4uanMiXSwibmFtZXMiOlsid2luZG93IiwiR0xPQiIsInNlbGYiLCJpc05vdEVtcHR5Iiwic3RyIiwiQm9vbGVhbiIsImlzTnVtYmVyIiwibnVtYmVyIiwidGVzdCIsImlzRW1haWwiLCJlbWFpbCIsInZhbGlkYXRpb24iLCJtZSIsImZvcm0iLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJjbG9zZUZvcm1CdXR0b24iLCJvbkNsb3NlIiwiZSIsInByZXZlbnREZWZhdWx0IiwiY2xvc2UiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwib3BlbiIsImNsYXNzTGlzdCIsInJlbW92ZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJhZGQiLCJpc1ZhbGlkIiwicmVxdWlyZWRGaWVsZHMiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZW1haWxWYWx1ZSIsInZhbHVlIiwibnVtYmVyVmFsdWUiLCJpc0FsbENvbXBsZXRlZCIsImNvbnNvbGUiLCJsb2ciLCJkYXRhIiwicmVzdWx0IiwiaSIsImxlbmd0aCIsIm9wZW5Gb3JtQnV0dG9uIl0sIm1hcHBpbmdzIjoiQUFBQUEsT0FBQUMsS0FBQSxHQ0FBLFdBQ0EsSUFBQUMsRUFBQSxDQUVBQyxXQUFBLFNBQUFDLEdBQ0EsT0FBQUMsUUFBQUQsSUFHQUUsU0FBQSxTQUFBQyxHQUVBLE1BREEsUUFDQUMsS0FBQUQsSUFHQUUsUUFBQSxTQUFBQyxHQUVBLE1BREEsNEpBQ0FGLEtBQUFFLEtBR0FWLE9BQUFDLEtBQUFVLFdBQUFULEVBakJBLEdDQUEsV0FDQSxJQUFBVSxFQUFBLEdBQ0FDLEVBQUFDLFNBQUFDLGNBQUEsbUJBQ0FDLEVBQUEsS0FFQUMsUUFBQSxTQUFBQyxHQUNBQSxFQUFBQyxpQkFFQVAsRUFBQVEsUUFDQUosRUFBQUssb0JBQUEsUUFBQUosVUFHQUwsRUFBQVUsS0FBQSxXQUNBVCxFQUFBVSxVQUFBQyxPQUFBLGNBRUFSLEVBQUFGLFNBQUFDLGNBQUEseUJBRUFDLEVBQUFTLGlCQUFBLFFBQUFSLFVBSUFMLEVBQUFRLE1BQUEsV0FDQVAsRUFBQVUsVUFBQUcsSUFBQSxjQUdBZCxFQUFBZSxRQUFBLFdBRUEsSUFBQUMsRUFBQWQsU0FBQWUsaUJBQUEsMkJBQ0FDLEVBQUFoQixTQUFBQyxjQUFBLGdCQUFBZ0IsTUFDQUMsRUFBQWxCLFNBQUFDLGNBQUEsaUJBQUFnQixNQUVBLE9BQUFuQixFQUFBcUIsZUFBQUwsR0FHQTNCLEtBQUFVLFdBQUFGLFFBQUFxQixLQUdBN0IsS0FBQVUsV0FBQUwsU0FBQTBCLEtBQ0FFLFFBQUFDLElBQUEscUJBQ0EsSUFKQUQsUUFBQUMsSUFBQSxvQkFDQSxJQUpBRCxRQUFBQyxJQUFBLDJDQUNBLElBYUF2QixFQUFBcUIsZUFBQSxTQUFBRyxHQUdBLElBRkEsSUFBQUMsR0FBQSxFQUVBQyxFQUFBLEVBQUFBLEVBQUFGLEVBQUFHLE9BQUFELElBQ0EsSUFBQXJDLEtBQUFVLFdBQUFSLFdBQUFpQyxFQUFBRSxHQUFBUCxPQUFBLENBRUFNLEdBQUEsRUFDQSxNQUlBLE9BQUFBLEdBR0FyQyxPQUFBQyxLQUFBWSxLQUFBRCxFQTVEQSxHQ0FBLFdBR0EsSUFBQTRCLEVBQUExQixTQUFBQyxjQUFBLGVBQ0FGLEVBQUFDLFNBQUFDLGNBQUEsU0FFQXlCLEdBQ0FBLEVBQUFmLGlCQUFBLFFBQUEsU0FBQVAsR0FDQUEsRUFBQUMsaUJBQ0FsQixLQUFBWSxLQUFBUyxTQUlBVCxHQUNBQSxFQUFBWSxpQkFBQSxTQUFBLFNBQUFQLEdBQ0FBLEVBQUFDLGlCQUNBbEIsS0FBQVksS0FBQWMsVUFDQU8sUUFBQUMsSUFBQSxZQUVBRCxRQUFBQyxJQUFBLGtCQW5CQSIsImZpbGUiOiJtYWluLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIndpbmRvdy5HTE9CID0ge307IiwiKGZ1bmN0aW9uKCkge1xyXG4gICAgdmFyIHNlbGYgPSB7fTtcclxuXHJcbiAgICBzZWxmLmlzTm90RW1wdHkgPSBmdW5jdGlvbihzdHIpIHtcclxuICAgICAgICByZXR1cm4gQm9vbGVhbihzdHIpO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBzZWxmLmlzTnVtYmVyID0gZnVuY3Rpb24obnVtYmVyKSB7XHJcbiAgICAgICAgdmFyIHJlZ0V4cCA9IC9eXFxkKyQvO1xyXG4gICAgICAgIHJldHVybiByZWdFeHAudGVzdChudW1iZXIpO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBzZWxmLmlzRW1haWwgPSBmdW5jdGlvbihlbWFpbCkge1xyXG4gICAgICAgIHZhciByZWdFeHAgPSAvXigoW148PigpW1xcXVxcXFwuLDs6XFxzQFxcXCJdKyhcXC5bXjw+KClbXFxdXFxcXC4sOzpcXHNAXFxcIl0rKSopfChcXFwiLitcXFwiKSlAKChcXFtbMC05XXsxLDN9XFwuWzAtOV17MSwzfVxcLlswLTldezEsM31cXC5bMC05XXsxLDN9XFxdKXwoKFthLXpBLVpcXC0wLTldK1xcLikrW2EtekEtWl17Mix9KSkkLztcclxuICAgICAgICByZXR1cm4gcmVnRXhwLnRlc3QoZW1haWwpO1xyXG4gICAgfTtcclxuXHJcbiAgICB3aW5kb3cuR0xPQi52YWxpZGF0aW9uID0gc2VsZjtcclxufSgpKTsiLCIoZnVuY3Rpb24oKSB7XHJcbiAgICB2YXIgbWUgPSB7fTtcclxuICAgIHZhciBmb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmZvcm0tY29udGFpbmVyJyk7XHJcbiAgICB2YXIgY2xvc2VGb3JtQnV0dG9uID0gbnVsbDtcclxuXHJcbiAgICBvbkNsb3NlID0gZnVuY3Rpb24oZSkge1xyXG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuXHJcbiAgICAgICAgbWUuY2xvc2UoKTtcclxuICAgICAgICBjbG9zZUZvcm1CdXR0b24ucmVtb3ZlRXZlbnRMaXN0ZW5lcignY2xpY2snLCBvbkNsb3NlKTtcclxuICAgIH07XHJcbiAgICBcclxuICAgIG1lLm9wZW4gPSBmdW5jdGlvbigpIHtcclxuICAgICAgICBmb3JtLmNsYXNzTGlzdC5yZW1vdmUoJ2lzLWhpZGRlbicpO1xyXG5cclxuICAgICAgICBjbG9zZUZvcm1CdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZm9ybV9fY2xvc2UtYnV0dG9uJyk7XHJcbiAgICAgICAgaWYgKGNsb3NlRm9ybUJ1dHRvbikge1xyXG4gICAgICAgICAgICBjbG9zZUZvcm1CdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBvbkNsb3NlKTtcclxuICAgICAgICB9O1xyXG4gICAgfTtcclxuXHJcbiAgICBtZS5jbG9zZSA9IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgIGZvcm0uY2xhc3NMaXN0LmFkZCgnaXMtaGlkZGVuJyk7XHJcbiAgICB9O1xyXG5cclxuICAgIG1lLmlzVmFsaWQgPSBmdW5jdGlvbigpIHtcclxuXHJcbiAgICAgICAgdmFyIHJlcXVpcmVkRmllbGRzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnW2RhdGEtdmFsaWQ9XCJyZXF1aXJlZFwiXScpO1xyXG4gICAgICAgIHZhciBlbWFpbFZhbHVlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEtZW1haWxdJykudmFsdWU7XHJcbiAgICAgICAgdmFyIG51bWJlclZhbHVlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEtbnVtYmVyXScpLnZhbHVlO1xyXG4gICAgICAgIFxyXG4gICAgICAgIGlmICghbWUuaXNBbGxDb21wbGV0ZWQocmVxdWlyZWRGaWVsZHMpKSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiUGxlYXNlLCBlbnRlciB0aGUgcmVxdWlyZWQgaW5mb3JtYXRpb25cIik7XHJcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9IGVsc2UgaWYgKCFHTE9CLnZhbGlkYXRpb24uaXNFbWFpbChlbWFpbFZhbHVlKSkge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIkluY29ycmVjdCBlTWFpbFwiKTtcclxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgIH0gZWxzZSBpZiAoIUdMT0IudmFsaWRhdGlvbi5pc051bWJlcihudW1iZXJWYWx1ZSkpIHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coXCJpbmNvcnJlY3QgbnVtYmVyXCIpO1xyXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4gdHJ1ZTtcclxuXHJcbiAgICB9O1xyXG5cclxuICAgIG1lLmlzQWxsQ29tcGxldGVkID0gZnVuY3Rpb24oZGF0YSkge1xyXG4gICAgICAgIHZhciByZXN1bHQgPSB0cnVlO1xyXG5cclxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGRhdGEubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgaWYgKCFHTE9CLnZhbGlkYXRpb24uaXNOb3RFbXB0eShkYXRhW2ldLnZhbHVlKSkge1xyXG4gICAgICAgICAgICAgICAgLy9hbGVydCgnaGVyZSBpcycgKyBkYXRhW2ldLnZhbHVlKTtcclxuICAgICAgICAgICAgICAgIHJlc3VsdCA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybiByZXN1bHQ7XHJcbiAgICB9XHJcblxyXG4gICAgd2luZG93LkdMT0IuZm9ybSA9IG1lO1xyXG59KCkpOyIsIihmdW5jdGlvbigpIHtcclxuXHJcbiAgICAvL0FkZCBldmVudCBsaXN0ZW5lciBmb3Igb3BlbiBmb3JtIGJ1dHRvblxyXG4gICAgdmFyIG9wZW5Gb3JtQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmFycm93LWRvd24nKTtcclxuICAgIHZhciBmb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmZvcm0nKTtcclxuXHJcbiAgICBpZiAob3BlbkZvcm1CdXR0b24pIHtcclxuICAgICAgICBvcGVuRm9ybUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKGUpIHtcclxuICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgICAgICBHTE9CLmZvcm0ub3BlbigpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfTtcclxuXHJcbiAgICBpZiAoZm9ybSkge1xyXG4gICAgICAgIGZvcm0uYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0JywgZnVuY3Rpb24oZSkge1xyXG4gICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgICAgIGlmIChHTE9CLmZvcm0uaXNWYWxpZCgpKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnQWxsIGdvb2QnKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdJcyBub3QgdmFsaWQnKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcblxyXG59KCkpOyJdfQ==
