window.GLOB={},function(){var e={isNotEmpty:function(e){return Boolean(e)},isNumber:function(e){return/^\d+$/.test(e)},isEmail:function(e){return/^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(e)}};window.GLOB.validation=e}(),function(){var o={},e=document.querySelector(".form-container"),n=null;onClose=function(e){e.preventDefault(),o.close(),n.removeEventListener("click",onClose)},o.open=function(){e.classList.remove("is-hidden"),(n=document.querySelector(".form__close-button"))&&n.addEventListener("click",onClose)},o.close=function(){e.classList.add("is-hidden")},o.isValid=function(){var e=document.querySelectorAll('[data-valid="required"]'),n=document.querySelector("[data-email]").value,t=document.querySelector("[data-number]").value;return o.isAllCompleted(e)?GLOB.validation.isEmail(n)?!!GLOB.validation.isNumber(t)||(console.log("incorrect number"),!1):(console.log("Incorrect eMail"),!1):(console.log("Please, enter the required information"),!1)},o.isAllCompleted=function(e){for(var n=!0,t=0;t<e.length;t++)if(!GLOB.validation.isNotEmpty(e[t].value)){n=!1;break}return n},window.GLOB.form=o}(),self={},self.toggleToActiveLink=function(e){var n,t,o,l=document.querySelectorAll(".nav__link"),i=e.dataset.link;console.log(i);for(var r=0;r<l.length;r++)l[r].classList.contains("nav__link--active")&&l[r].classList.remove("nav__link--active");e.classList.add("nav__link--active"),n=i,t=document.querySelector("."+n).getBoundingClientRect(),o=setInterval(function(){document.documentElement.scrollTop<t.top?window.scrollBy(0,5):clearInterval(o)},.005)},GLOB.navigation=self,function(){var e=document.querySelector(".arrow-down"),n=document.querySelector(".form"),t=document.querySelector(".nav");e&&e.addEventListener("click",function(e){e.preventDefault(),GLOB.form.open()}),n&&n.addEventListener("submit",function(e){e.preventDefault(),GLOB.form.isValid()?console.log("All good"):console.log("Is not valid")}),t&&t.addEventListener("click",function(e){var n=e.target;"a"===n.tagName.toLowerCase()&&(e.preventDefault(),GLOB.navigation.toggleToActiveLink(n))})}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
